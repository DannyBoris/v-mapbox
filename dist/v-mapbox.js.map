{"version":3,"file":"v-mapbox.js","sources":["../src/utils/injects.ts","../src/utils/symbols.ts","../src/controls/attribution/VControlAttribution.vue","../src/controls/fullscreen/VControlFullscreen.vue","../src/controls/geolocate/events.ts","../src/controls/geolocate/VControlGeolocate.vue","../src/controls/navigation/VControlNavigation.vue","../src/controls/scale/VControlScale.vue","../src/layers/deck.gl/VLayerDeckArc.vue","../src/layers/deck.gl/VLayerDeckGeojson.vue","../src/layers/mapbox/VLayerMapboxCanvas.vue","../src/layers/mapbox/VLayerMapboxGeojson.vue","../src/layers/mapbox/VLayerMapboxImage.vue","../src/layers/mapbox/VLayerMapboxRaster.vue","../src/layers/mapbox/VLayerMapboxVector.vue","../src/layers/mapbox/VLayerMapboxVideo.vue","../src/constants/events/map.ts","../src/constants/events/marker.ts","../src/constants/events/popup.ts","../src/map/VMap.vue","../src/popups/VPopup.vue","../src/markers/VMarker.vue"],"sourcesContent":["import type { InjectionKey } from 'vue';\nimport { inject } from 'vue';\n\n/**\n * Dependency injection ðŸ¥³\n * @param {InjectionKey} key - The key to inject\n * @param {string | undefined} fallback - The fallback value\n * @returns {undefined} - The value\n */\nexport function injectStrict<T>(key: InjectionKey<T>, fallback?: T): T {\n  const resolved = inject(key, fallback);\n  if (!resolved) {\n    throw new Error(`Could not resolve ${key.description}`);\n  }\n  return resolved;\n}\n","import type { Map } from 'maplibre-gl';\nimport type { InjectionKey, Ref } from 'vue';\n\nconst MapKey: InjectionKey<Ref<Map>> = Symbol('Map');\n\nexport { MapKey };\n","<script setup lang=\"ts\">\n  import type { ControlPosition, AttributionControlOptions } from './types';\n  import { AttributionControl } from 'maplibre-gl';\n  import { useSlots, onMounted } from 'vue';\n  import { MapKey, injectStrict } from '../../utils';\n\n  const defaultOptions: AttributionControlOptions = {\n    compact: false,\n    customAttribution: undefined,\n  };\n\n  const props = withDefaults(\n    defineProps<{\n      options?: AttributionControlOptions;\n      position?: ControlPosition;\n    }>(),\n    {\n      options: undefined,\n      position: 'bottom-right',\n    },\n  );\n\n  const slots = useSlots();\n\n  let map = injectStrict(MapKey);\n\n  onMounted(() => {\n    addControl();\n  });\n\n  const addControl = (): void => {\n    let options = defaultOptions;\n    if (props.options) {\n      options = {\n        ...props.options,\n      };\n    }\n    if (slots && slots.default?.()) {\n      options.customAttribution = slots.default()[0]\n        .children as unknown as string;\n    }\n    const control = new AttributionControl(options);\n    map.value.addControl(control, props.position);\n  };\n</script>\n\n<template>\n  <slot />\n</template>\n","<script setup lang=\"ts\">\n  import type { ControlPosition, FullscreenControlOptions } from './types';\n  import { FullscreenControl } from 'maplibre-gl';\n  import { onMounted } from 'vue';\n  import { MapKey, injectStrict } from '../../utils';\n\n  const defaultOptions: FullscreenControlOptions = {\n    container: undefined,\n  };\n\n  const props = withDefaults(\n    defineProps<{\n      options?: FullscreenControlOptions;\n      position?: ControlPosition;\n    }>(),\n    {\n      options: undefined,\n      position: 'top-left',\n    },\n  );\n\n  let map = injectStrict(MapKey);\n\n  onMounted(() => {\n    addControl();\n  });\n\n  const addControl = (): void => {\n    const control = new FullscreenControl(props.options || defaultOptions);\n    map.value.addControl(control, props.position);\n  };\n</script>\n","export const geolocateControlEvents: string[] = [\n  'geolocate',\n  'error',\n  'outofmaxbounds',\n  'trackuserlocationstart',\n  'trackuserlocationend',\n];\n","<script setup lang=\"ts\">\n  import type { ControlPosition, GeolocateControlOptions } from './types';\n  import { GeolocateControl } from 'maplibre-gl';\n  import { onMounted } from 'vue';\n  import { geolocateControlEvents as events } from './events';\n  import { MapKey, injectStrict } from '../../utils';\n\n  const defaultOptions: GeolocateControlOptions = {\n    fitBoundsOptions: {\n      linear: false,\n      offset: [0, 0],\n      maxZoom: 22,\n    },\n    positionOptions: {\n      enableHighAccuracy: true,\n      maximumAge: 0,\n      timeout: 6000,\n    },\n    trackUserLocation: true,\n    showAccuracyCircle: true,\n    showUserLocation: true,\n  };\n\n  const props = withDefaults(\n    defineProps<{\n      options?: GeolocateControlOptions;\n      position?: ControlPosition;\n    }>(),\n    {\n      options: undefined,\n      position: 'top-left',\n    },\n  );\n\n  const emit = defineEmits(events);\n\n  let map = injectStrict(MapKey);\n\n  onMounted(() => {\n    addControl();\n  });\n\n  const addControl = (): void => {\n    const control = new GeolocateControl(props.options || defaultOptions);\n    map.value.addControl(control, props.position);\n    events.forEach((event: string) => {\n      control.on(event, () => {\n        emit(event);\n      });\n    });\n  };\n</script>\n","<script setup lang=\"ts\">\n  import type { ControlPosition, NavigationControlOptions } from './types';\n  import { NavigationControl } from 'maplibre-gl';\n  import { onMounted, inject } from 'vue';\n  import { MapKey } from '../../utils';\n\n  const defaultOptions: NavigationControlOptions = {\n    showCompass: true,\n    showZoom: true,\n    visualizePitch: true,\n  };\n\n  const props = withDefaults(\n    defineProps<{\n      options?: NavigationControlOptions;\n      position?: ControlPosition;\n    }>(),\n    {\n      options: undefined,\n      position: 'top-left',\n    },\n  );\n\n  const map = inject(MapKey);\n\n  onMounted(() => {\n    addControl();\n  });\n\n  const addControl = (): void => {\n    const control = new NavigationControl(props.options || defaultOptions);\n    map?.value.addControl(control, props.position);\n  };\n</script>\n","<script setup lang=\"ts\">\n  import type { ControlPosition, ScaleControlOptions } from './types';\n  import { onMounted, inject } from 'vue';\n  import { ScaleControl } from 'maplibre-gl';\n  import { MapKey } from '../../utils';\n\n  const defaultOptions: ScaleControlOptions = {\n    maxWidth: 100,\n    unit: 'metric',\n  };\n\n  const props = withDefaults(\n    defineProps<{\n      options?: ScaleControlOptions;\n      position?: ControlPosition;\n    }>(),\n    {\n      options: undefined,\n      position: 'bottom-left',\n    },\n  );\n\n  const map = inject(MapKey);\n\n  onMounted(() => {\n    addControl();\n  });\n\n  const addControl = (): void => {\n    const control = new ScaleControl(props.options || defaultOptions);\n    map?.value.addControl(control, props.position);\n  };\n</script>\n","<script lang=\"ts\">\n  // @ts-ignore\n  import { ArcLayer } from '@deck.gl/layers';\n  // @ts-ignore\n  import { MapboxLayer } from '@deck.gl/mapbox';\n  import type { PropType, Ref } from 'vue';\n  import { defineComponent, onMounted, ref, watch } from 'vue';\n  import { injectStrict, MapKey } from '../../utils';\n\n  export default defineComponent({\n    name: 'VLayerDeckArc',\n    props: {\n      layerId: {\n        type: String as PropType<string>,\n        default: 'deck.gl-arc-layer',\n        required: true,\n      },\n      data: {\n        type: Object as PropType<any>,\n        required: true,\n      },\n      options: {\n        type: Object,\n        required: true,\n      },\n      before: {\n        type: String as PropType<string>,\n        default: '',\n        required: false,\n      },\n    },\n    setup(props) {\n      let map = injectStrict(MapKey);\n      let loaded: Ref<boolean> = ref(false);\n\n      const layer = new MapboxLayer({\n        ...props.options,\n        id: props.layerId,\n        data: props.data,\n        type: ArcLayer,\n      });\n\n      map.value.on('style.load', () => {\n        // https://github.com/mapbox/mapbox-gl-js/issues/2268#issuecomment-401979967\n        const styleTimeout = () => {\n          if (!map.value.isStyleLoaded()) {\n            loaded.value = false;\n            setTimeout(styleTimeout, 200);\n          } else {\n            loaded.value = true;\n          }\n        };\n        styleTimeout();\n      });\n\n      /**\n       * Watcher(s)\n       */\n      watch(loaded, (value) => {\n        if (value) {\n          addLayer();\n        }\n      });\n\n      onMounted(() => {\n        addLayer();\n      });\n\n      /**\n       * Reâ€“adds the layer when style changed\n       * @returns {void}\n       */\n      function addLayer(): void {\n        map.value.addLayer(layer, props.before);\n      }\n    },\n  });\n</script>\n","<script lang=\"ts\">\n  // @ts-ignore\n  import { GeoJsonLayer } from '@deck.gl/layers';\n  // @ts-ignore\n  import { MapboxLayer } from '@deck.gl/mapbox';\n  import { FeatureCollection } from 'geojson';\n  import type { PropType, Ref } from 'vue';\n  import { defineComponent, onMounted, ref, watch } from 'vue';\n  import { injectStrict, MapKey } from '../../utils';\n\n  export default defineComponent({\n    name: 'VLayerDeckGeojson',\n    props: {\n      layerId: {\n        type: String as PropType<string>,\n        default: 'deck.gl-geojson-layer',\n        required: true,\n      },\n      data: {\n        type: Object as PropType<FeatureCollection>,\n        required: true,\n      },\n      options: {\n        type: Object,\n        required: true,\n      },\n      before: {\n        type: String as PropType<string>,\n        default: '',\n        required: false,\n      },\n    },\n    setup(props) {\n      let map = injectStrict(MapKey);\n      let loaded: Ref<boolean> = ref(false);\n\n      const layer = new MapboxLayer({\n        ...props.options,\n        id: props.layerId,\n        data: props.data,\n        type: GeoJsonLayer,\n      });\n\n      map.value.on('style.load', () => {\n        // https://github.com/mapbox/mapbox-gl-js/issues/2268#issuecomment-401979967\n        const styleTimeout = () => {\n          if (!map.value.isStyleLoaded()) {\n            loaded.value = false;\n            setTimeout(styleTimeout, 200);\n          } else {\n            loaded.value = true;\n          }\n        };\n        styleTimeout();\n      });\n\n      /**\n       * Watcher(s)\n       */\n      watch(loaded, (value) => {\n        if (value) {\n          addLayer();\n        }\n      });\n\n      onMounted(() => {\n        addLayer();\n      });\n\n      /**\n       * Reâ€“adds the layer when style changed\n       * @returns {void}\n       */\n      function addLayer(): void {\n        map.value.addLayer(layer, props.before);\n      }\n    },\n  });\n</script>\n","<template>\n  <div>\n    <slot />\n  </div>\n</template>\n<script lang=\"ts\">\n  import type { FeatureCollection } from 'geojson';\n  import type {\n    LayerSpecification as AnyLayer,\n    GeoJSONSourceSpecification as GeoJSONSourceRaw,\n  } from 'maplibre-gl';\n  import type { PropType, Ref } from 'vue';\n  import { defineComponent, onMounted, ref, watch } from 'vue';\n  import { injectStrict, MapKey } from '../../utils';\n\n  export default defineComponent({\n    name: 'VLayerMapboxCanvas',\n    props: {\n      sourceId: {\n        type: String as PropType<string>,\n        default: 'maplibre.gl-canvas-source',\n        required: true,\n      },\n      layerId: {\n        type: String as PropType<string>,\n        default: 'maplibre.gl-canvas-layer',\n        required: true,\n      },\n      source: {\n        type: Object as PropType<FeatureCollection>,\n        required: true,\n      },\n      layer: {\n        type: Object as PropType<AnyLayer>,\n        default: () => ({}),\n        required: true,\n      },\n      before: {\n        type: String as PropType<string>,\n        default: '',\n        required: false,\n      },\n    },\n    setup(props) {\n      let map = injectStrict(MapKey);\n      let loaded: Ref<boolean> = ref(false);\n\n      const layer = {\n        ...props.layer,\n        id: props.layerId,\n        source: props.sourceId,\n      };\n      const source: GeoJSONSourceRaw = {\n        type: 'geojson',\n        data: props.source,\n      };\n\n      map.value.on('style.load', () => {\n        // https://github.com/mapbox/mapbox-gl-js/issues/2268#issuecomment-401979967\n        const styleTimeout = () => {\n          if (!map.value.isStyleLoaded()) {\n            loaded.value = false;\n            setTimeout(styleTimeout, 200);\n          } else {\n            loaded.value = true;\n          }\n        };\n        styleTimeout();\n      });\n\n      /**\n       * Watcher(s)\n       */\n      watch(loaded, (value) => {\n        if (value) {\n          addLayer();\n        }\n      });\n\n      onMounted(() => {\n        addLayer();\n      });\n\n      /**\n       * Reâ€“adds the layer when style changed\n       * @returns {void}\n       */\n      function addLayer(): void {\n        map.value.addSource(props.sourceId, source);\n        map.value.addLayer(layer, props.before);\n      }\n    },\n  });\n</script>\n","<template>\n  <div>\n    <slot />\n  </div>\n</template>\n<script lang=\"ts\">\n  import type {\n    LayerSpecification as AnyLayer,\n    SourceSpecification as AnySource,\n  } from 'maplibre-gl';\n  import type { PropType, Ref } from 'vue';\n  import { defineComponent, onMounted, onBeforeUnmount, ref, watch } from 'vue';\n  import { injectStrict, MapKey } from '../../utils';\n\n  export default defineComponent({\n    name: 'VLayerMapboxGeojson',\n    props: {\n      sourceId: {\n        type: String as PropType<string>,\n        default: 'maplibre.gl-geojson-source',\n        required: true,\n      },\n      layerId: {\n        type: String as PropType<string>,\n        default: 'maplibre.gl-geojson-layer',\n        required: true,\n      },\n      source: {\n        type: Object as PropType<AnySource>,\n        required: true,\n      },\n      layer: {\n        type: Object as PropType<AnyLayer>,\n        default: () => ({}),\n        required: true,\n      },\n      before: {\n        type: String as PropType<string>,\n        default: '',\n        required: false,\n      },\n    },\n    setup(props) {\n      let map = injectStrict(MapKey);\n      let loaded: Ref<boolean> = ref(false);\n\n      const layer = {\n        ...props.layer,\n        id: props.layerId,\n        source: props.sourceId,\n      };\n\n      map.value.on('style.load', () => {\n        // https://github.com/mapbox/mapbox-gl-js/issues/2268#issuecomment-401979967\n        const styleTimeout = () => {\n          if (!map.value.isStyleLoaded()) {\n            loaded.value = false;\n            setTimeout(styleTimeout, 200);\n          } else {\n            loaded.value = true;\n          }\n        };\n        styleTimeout();\n      });\n\n      /**\n       * Watcher(s)\n       */\n      watch(loaded, (value) => {\n        if (value) {\n          addLayer();\n        }\n      });\n\n      onMounted(() => {\n        addLayer();\n      });\n\n      onBeforeUnmount(() => {\n        if (map.value.getLayer(props.layerId)) {\n          map.value.removeLayer(props.layerId);\n          map.value.removeSource(props.sourceId);\n        }\n      });\n\n      /**\n       * Reâ€“adds the layer when style changed\n       * @returns {void}\n       */\n      function addLayer(): void {\n        map.value.addSource(props.sourceId, props.source);\n        map.value.addLayer(layer, props.before);\n      }\n    },\n  });\n</script>\n","<template>\n  <div>\n    <slot />\n  </div>\n</template>\n<script lang=\"ts\">\n  import type {\n    LayerSpecification as AnyLayer,\n    ImageSourceSpecification as ImageSourceRaw,\n  } from 'maplibre-gl';\n  import type { PropType, Ref } from 'vue';\n  import { defineComponent, onMounted, ref, watch } from 'vue';\n  import { injectStrict, MapKey } from '../../utils';\n\n  export default defineComponent({\n    name: 'VLayerMapboxImage',\n    props: {\n      sourceId: {\n        type: String as PropType<string>,\n        default: 'maplibre.gl-image-source',\n        required: true,\n      },\n      layerId: {\n        type: String as PropType<string>,\n        default: 'maplibre.gl-image-layer',\n        required: true,\n      },\n      source: {\n        type: Object as PropType<ImageSourceRaw>,\n        required: true,\n      },\n      layer: {\n        type: Object as PropType<AnyLayer>,\n        default: () => ({}),\n        required: true,\n      },\n      before: {\n        type: String as PropType<string>,\n        default: '',\n        required: false,\n      },\n    },\n    setup(props) {\n      let map = injectStrict(MapKey);\n      let loaded: Ref<boolean> = ref(false);\n\n      const layer = {\n        ...props.layer,\n        id: props.layerId,\n        source: props.sourceId,\n      };\n\n      map.value.on('style.load', () => {\n        // https://github.com/mapbox/mapbox-gl-js/issues/2268#issuecomment-401979967\n        const styleTimeout = () => {\n          if (!map.value.isStyleLoaded()) {\n            loaded.value = false;\n            setTimeout(styleTimeout, 200);\n          } else {\n            loaded.value = true;\n          }\n        };\n        styleTimeout();\n      });\n\n      /**\n       * Watcher(s)\n       */\n      watch(loaded, (value) => {\n        if (value) {\n          addLayer();\n        }\n      });\n\n      onMounted(() => {\n        addLayer();\n      });\n\n      /**\n       * Reâ€“adds the layer when style changed\n       * @returns {void}\n       */\n      function addLayer(): void {\n        map.value.addSource(props.sourceId, props.source);\n        map.value.addLayer(layer, props.before);\n      }\n    },\n  });\n</script>\n","<template>\n  <div>\n    <slot />\n  </div>\n</template>\n<script lang=\"ts\">\n  import type { FeatureCollection } from 'geojson';\n  import type {\n    LayerSpecification as AnyLayer,\n    GeoJSONSourceSpecification as GeoJSONSourceRaw,\n  } from 'maplibre-gl';\n  import { defineComponent, onMounted, PropType, ref, Ref, watch } from 'vue';\n  import { injectStrict, MapKey } from '../../utils';\n\n  export default defineComponent({\n    name: 'VLayerMapboxRaster',\n    props: {\n      sourceId: {\n        type: String as PropType<string>,\n        default: 'maplibre.gl-raster-source',\n        required: true,\n      },\n      layerId: {\n        type: String as PropType<string>,\n        default: 'maplibre.gl-raster-layer',\n        required: true,\n      },\n      source: {\n        type: Object as PropType<FeatureCollection>,\n        required: true,\n      },\n      layer: {\n        type: Object as PropType<AnyLayer>,\n        default: () => ({}),\n        required: true,\n      },\n      before: {\n        type: String as PropType<string>,\n        default: '',\n        required: false,\n      },\n    },\n    setup(props) {\n      let map = injectStrict(MapKey);\n      let loaded: Ref<boolean> = ref(false);\n\n      const layer = {\n        ...props.layer,\n        id: props.layerId,\n        source: props.sourceId,\n      };\n      const source: GeoJSONSourceRaw = {\n        type: 'geojson',\n        data: props.source,\n      };\n\n      map.value.on('style.load', () => {\n        // https://github.com/mapbox/mapbox-gl-js/issues/2268#issuecomment-401979967\n        const styleTimeout = () => {\n          if (!map.value.isStyleLoaded()) {\n            loaded.value = false;\n            setTimeout(styleTimeout, 200);\n          } else {\n            loaded.value = true;\n          }\n        };\n        styleTimeout();\n      });\n\n      /**\n       * Watcher(s)\n       */\n      watch(loaded, (value) => {\n        if (value) {\n          addLayer();\n        }\n      });\n\n      onMounted(() => {\n        addLayer();\n      });\n\n      /**\n       * Reâ€“adds the layer when style changed\n       * @returns {void}\n       */\n      function addLayer(): void {\n        map.value.addSource(props.sourceId, source);\n        map.value.addLayer(layer, props.before);\n      }\n    },\n  });\n</script>\n","<template>\n  <div>\n    <slot />\n  </div>\n</template>\n<script lang=\"ts\">\n  import type {\n    LayerSpecification as AnyLayer,\n    VectorSourceSpecification as VectorSource,\n  } from 'maplibre-gl';\n  import type { PropType, Ref } from 'vue';\n  import { defineComponent, onMounted, ref, watch } from 'vue';\n  import { injectStrict, MapKey } from '../../utils';\n\n  export default defineComponent({\n    name: 'VLayerMapboxVector',\n    props: {\n      sourceId: {\n        type: String as PropType<string>,\n        default: 'maplibre.gl-vector-source',\n        required: true,\n      },\n      layerId: {\n        type: String as PropType<string>,\n        default: 'maplibre.gl-vector-layer',\n        required: true,\n      },\n      source: {\n        type: Object as PropType<VectorSource>,\n        required: true,\n      },\n      layer: {\n        type: Object as PropType<AnyLayer>,\n        default: () => ({}),\n        required: true,\n      },\n      before: {\n        type: String as PropType<string>,\n        default: '',\n        required: false,\n      },\n    },\n    setup(props) {\n      let map = injectStrict(MapKey);\n      let loaded: Ref<boolean> = ref(false);\n\n      const layer = {\n        ...props.layer,\n        id: props.layerId,\n        source: props.sourceId,\n      };\n\n      map.value.on('style.load', () => {\n        // https://github.com/mapbox/mapbox-gl-js/issues/2268#issuecomment-401979967\n        const styleTimeout = () => {\n          if (!map.value.isStyleLoaded()) {\n            loaded.value = false;\n            setTimeout(styleTimeout, 200);\n          } else {\n            loaded.value = true;\n          }\n        };\n        styleTimeout();\n      });\n\n      /**\n       * Watcher(s)\n       */\n      watch(loaded, (value) => {\n        if (value) {\n          addLayer();\n        }\n      });\n\n      onMounted(() => {\n        addLayer();\n      });\n\n      /**\n       * Reâ€“adds the layer when style changed\n       * @returns {void}\n       */\n      function addLayer(): void {\n        map.value.addSource(props.sourceId, props.source);\n        map.value.addLayer(layer, props.before);\n      }\n    },\n  });\n</script>\n","<template>\n  <div>\n    <slot />\n  </div>\n</template>\n<script lang=\"ts\">\n  import type {\n    LayerSpecification as AnyLayer,\n    VectorSourceSpecification as VectorSource,\n  } from 'maplibre-gl';\n  import type { PropType, Ref } from 'vue';\n  import { defineComponent, onMounted, ref, watch } from 'vue';\n  import { injectStrict, MapKey } from '../../utils';\n\n  export default defineComponent({\n    name: 'VLayerMapboxVideo',\n    props: {\n      sourceId: {\n        type: String as PropType<string>,\n        default: 'maplibre.gl-video-source',\n        required: true,\n      },\n      layerId: {\n        type: String as PropType<string>,\n        default: 'maplibre.gl-video-layer',\n        required: true,\n      },\n      source: {\n        type: Object as PropType<VectorSource>,\n        required: true,\n      },\n      layer: {\n        type: Object as PropType<AnyLayer>,\n        default: () => ({}),\n        required: true,\n      },\n      before: {\n        type: String as PropType<string>,\n        default: '',\n        required: false,\n      },\n    },\n    setup(props) {\n      let map = injectStrict(MapKey);\n      let loaded: Ref<boolean> = ref(false);\n\n      const layer = {\n        ...props.layer,\n        id: props.layerId,\n        source: props.sourceId,\n      };\n\n      map.value.on('style.load', () => {\n        // https://github.com/mapbox/mapbox-gl-js/issues/2268#issuecomment-401979967\n        const styleTimeout = () => {\n          if (!map.value.isStyleLoaded()) {\n            loaded.value = false;\n            setTimeout(styleTimeout, 200);\n          } else {\n            loaded.value = true;\n          }\n        };\n        styleTimeout();\n      });\n\n      /**\n       * Watcher(s)\n       */\n      watch(loaded, (value) => {\n        if (value) {\n          addLayer();\n        }\n      });\n\n      onMounted(() => {\n        addLayer();\n      });\n\n      /**\n       * Reâ€“adds the layer when style changed\n       * @returns {void}\n       */\n      function addLayer(): void {\n        map.value.addSource(props.sourceId, props.source);\n        map.value.addLayer(layer, props.before);\n      }\n    },\n  });\n</script>\n","import { MapEventType } from 'maplibre-gl';\n\nexport const mapEvents: Array<keyof MapEventType> = [\n  'error',\n  'load',\n  'idle',\n  'remove',\n  'render',\n  'resize',\n  'webglcontextlost',\n  'webglcontextrestored',\n  'dataloading',\n  'data',\n  'tiledataloading',\n  'sourcedataloading',\n  'styledataloading',\n  'sourcedata',\n  'styledata',\n  'boxzoomcancel',\n  'boxzoomstart',\n  'boxzoomend',\n  'touchcancel',\n  'touchmove',\n  'touchend',\n  'touchstart',\n  'click',\n  'contextmenu',\n  'dblclick',\n  'mousemove',\n  'mouseup',\n  'mousedown',\n  'mouseout',\n  'mouseover',\n  'movestart',\n  'move',\n  'moveend',\n  'zoomstart',\n  'zoom',\n  'zoomend',\n  'rotatestart',\n  'rotate',\n  'rotateend',\n  'dragstart',\n  'drag',\n  'dragend',\n  'pitchstart',\n  'pitch',\n  'pitchend',\n  'wheel',\n];\n","export const markerMapEvents = ['dragstart', 'drag', 'dragend'];\nexport const markerDOMEvents = ['click', 'mouseenter', 'mouseleave'];\n","export const popupEvents = ['open', 'close'];\n","<script setup lang=\"ts\">\n  import type { MapOptions, MapEventType } from 'maplibre-gl';\n  import type { Ref } from 'vue';\n  import { Map } from 'maplibre-gl';\n  import { onMounted, provide, ref, shallowRef } from 'vue';\n  import { mapEvents } from '../constants/events';\n  import { MapKey } from '../utils/symbols';\n\n  const props = withDefaults(\n    defineProps<{\n      options: MapOptions;\n    }>(),\n    {\n      // @ts-ignore\n      options: { container: 'map' },\n    },\n  );\n\n  const emit = defineEmits(['loaded', ...mapEvents]);\n\n  let map: Ref<Map> = shallowRef({} as Map);\n  let loaded: Ref<boolean> = ref(false);\n  let events: Ref<Array<keyof MapEventType>> = ref(mapEvents);\n\n  onMounted(() => {\n    map.value = new Map(props.options);\n    loaded.value = true;\n    provide(MapKey, map);\n    listenMapEvents();\n  });\n\n  const listenMapEvents = () => {\n    events.value.forEach((e) => {\n      map.value.on(e, (evt) => {\n        switch (e) {\n          case 'load':\n            emit('loaded', map.value);\n            break;\n          default:\n            emit(e, evt);\n            break;\n        }\n      });\n    });\n  };\n</script>\n\n<template>\n  <div :id=\"`${options?.container}`\" class=\"v-map-container\">\n    <slot />\n  </div>\n</template>\n\n<style scoped>\n  canvas {\n    outline: none;\n  }\n  .v-map-container {\n    width: 100%;\n    height: 100%;\n  }\n</style>\n","<script lang=\"ts\">\n  import type { LngLatLike, Map, Marker, PopupOptions } from 'maplibre-gl';\n  import type { PropType, Ref } from 'vue';\n  import { Popup } from 'maplibre-gl';\n  import { defineComponent, onBeforeUnmount, onMounted, ref } from 'vue';\n  import { popupEvents } from '../constants/events';\n  import { injectStrict, MapKey } from '../utils';\n\n  export default defineComponent({\n    name: 'VPopup',\n    props: {\n      marker: {\n        type: Object as PropType<Marker>,\n        default: () => ({}) as Marker,\n        required: false,\n      },\n      options: {\n        type: Object as PropType<PopupOptions>,\n        default: () => ({}) as PopupOptions,\n        required: true,\n      },\n      coordinates: {\n        type: Object as PropType<LngLatLike>,\n        default: () => ({}),\n        required: true,\n      },\n    },\n    emits: ['added', 'removed', ...popupEvents],\n    setup(props, { emit }) {\n      let map: Ref<Map> = injectStrict(MapKey);\n      let popup: Popup = new Popup(props.options);\n      let loaded: Ref<boolean> = ref(true);\n      const content: Ref<null | HTMLElement> = ref(null);\n\n      map.value.on('style.load', () => {\n        // https://github.com/mapbox/mapbox-gl-js/issues/2268#issuecomment-401979967\n        const styleTimeout = () => {\n          if (!map.value.isStyleLoaded()) {\n            loaded.value = false;\n            setTimeout(styleTimeout, 200);\n          } else {\n            loaded.value = true;\n          }\n        };\n        styleTimeout();\n      });\n\n      onMounted(() => {\n        if (loaded.value) {\n          setPopupContent();\n          setPopupCoordinates();\n          addToMarker();\n          listenPopupEvents();\n        } else {\n          remove();\n          removePopupEvents();\n        }\n      });\n\n      onBeforeUnmount(() => {\n        remove();\n        removePopupEvents();\n      });\n\n      /**\n       * Sets the HTML content for the popup\n       * @returns {void}\n       */\n      function setPopupContent(): void {\n        popup.setDOMContent(content.value as Node);\n      }\n      /**\n       * Set popup coordinates\n       * @returns {void}\n       */\n      function setPopupCoordinates(): void {\n        popup.setLngLat(props.coordinates);\n      }\n\n      /**\n       * Add popup to marker if marker exists\n       * else add it to the map.\n       * @returns {void}\n       */\n      function addToMarker(): void {\n        if (props.marker) {\n          props.marker.setPopup(popup);\n        } else {\n          popup.addTo(map.value);\n        }\n        emit('added', { popup });\n      }\n      /**\n       * Remove popup from map\n       * @returns {void}\n       */\n      function remove(): void {\n        popup.remove();\n        emit('removed');\n      }\n\n      /**\n       * Listen to events\n       * @returns {void}\n       */\n      function listenPopupEvents(): void {\n        popupEvents.forEach((event: string) => {\n          popup.on(event, () => {\n            emit(event);\n          });\n        });\n      }\n      /**\n       * Turn off listener\n       * @returns {void}\n       */\n      function removePopupEvents(): void {\n        popupEvents.forEach((event: string) => {\n          popup.off(event, () => {\n            emit(event);\n          });\n        });\n      }\n\n      return {\n        content,\n      };\n    },\n  });\n</script>\n\n<template>\n  <section :id=\"`popup-${Date.now()}`\" ref=\"content\">\n    <slot />\n  </section>\n</template>\n","<script lang=\"ts\">\n  import type { LngLatLike, MarkerOptions, PopupOptions } from 'maplibre-gl';\n  import { Marker } from 'maplibre-gl';\n  import type { PropType, Ref } from 'vue';\n  import { defineComponent, onMounted, onBeforeUnmount, ref, watch } from 'vue';\n  import { markerDOMEvents, markerMapEvents } from '../constants/events';\n  import VPopup from '../popups/VPopup.vue';\n  import { injectStrict, MapKey } from '../utils';\n\n  export default defineComponent({\n    name: 'VMarker',\n    components: {\n      VPopup,\n    },\n    props: {\n      coordinates: {\n        type: [Object, Array] as PropType<LngLatLike>,\n        default: () => ({}),\n        required: true,\n      },\n      options: {\n        type: Object as PropType<MarkerOptions>,\n        default: () => ({}) as MarkerOptions,\n        required: false,\n      },\n      popupOptions: {\n        type: Object as PropType<PopupOptions>,\n        default: () => ({}) as PopupOptions,\n        required: false,\n      },\n      cursor: {\n        type: String as PropType<string>,\n        default: 'pointer',\n        required: false,\n      },\n    },\n    emits: [\n      'added',\n      'update:coordinates',\n      'removed',\n      ...markerMapEvents,\n      ...markerDOMEvents,\n    ],\n    setup(props, { emit }) {\n      let map = injectStrict(MapKey);\n      let marker: Ref<Marker> = ref({}) as Ref<Marker>;\n      let loaded: Ref<boolean> = ref(true);\n      let isMarkerAvailable = ref(false);\n      let slotRef: Ref<HTMLElement | null> = ref(null);\n\n      const setSlotRef = (el: HTMLElement) => {\n        slotRef.value = el;\n      };\n\n      watch(marker, (marker) => {\n        if ('_map' in marker) {\n          isMarkerAvailable.value = true;\n        } else {\n          isMarkerAvailable.value = false;\n        }\n      });\n\n      onMounted(() => {\n        if (loaded.value) {\n          if (slotRef.value !== null) {\n            // add marker to map\n            marker.value = new Marker({\n              element: slotRef.value!,\n              ...props.options,\n            });\n            setMarkerCoordinates(marker.value);\n            addToMap(marker.value);\n            setCursorPointer(marker.value);\n            listenMarkerEvents(marker.value);\n          } else {\n            marker.value = new Marker(props.options);\n            setMarkerCoordinates(marker.value);\n            addToMap(marker.value);\n            setCursorPointer(marker.value);\n            listenMarkerEvents(marker.value);\n          }\n        } else {\n          removeFromMap(marker.value);\n        }\n      });\n\n      onBeforeUnmount(() => {\n        removeFromMap(marker.value);\n      });\n\n      map.value.on('style.load', () => {\n        // https://github.com/mapbox/mapbox-gl-js/issues/2268#issuecomment-401979967\n        const styleTimeout = () => {\n          if (!map.value.isStyleLoaded()) {\n            loaded.value = false;\n            setTimeout(styleTimeout, 200);\n          } else {\n            loaded.value = true;\n          }\n        };\n        styleTimeout();\n      });\n\n      /**\n       * Set marker coordinates\n       * @param {Marker} marker - Marker\n       * @returns {void}\n       */\n      function setMarkerCoordinates(marker: Marker): void {\n        marker.setLngLat(props.coordinates);\n      }\n      /**\n       * Sets the Cursor to Pointer\n       * @param {Marker} marker - Marker\n       * @returns {void}\n       */\n      function setCursorPointer(marker: Marker): void {\n        marker.getElement().style.cursor = props.cursor || 'default';\n      }\n\n      /**\n       * Add marker to map\n       * @param {Marker} marker - Marker\n       * @returns {void}\n       */\n      function addToMap(marker: Marker): void {\n        marker.addTo(map.value);\n        emit('added', { marker });\n      }\n      /**\n       * Remove marker from map\n       * @param {Marker} marker - Marker\n       * @returns {void}\n       */\n      function removeFromMap(marker: Marker): void {\n        if (isMarkerAvailable.value) {\n          marker.remove();\n          emit('removed');\n        }\n      }\n\n      /**\n       * Listen to events\n       * @param {Marker} marker - Marker\n       * @returns {void}\n       */\n      function listenMarkerEvents(marker: Marker): void {\n        let coordinates: LngLatLike;\n        // Listen to Marker Mapbox events\n        markerMapEvents.forEach((event: string) => {\n          marker.on(event, (e: { target: Marker }) => {\n            if (event === 'dragend') {\n              if (props.coordinates instanceof Array) {\n                coordinates = [e.target._lngLat.lng, e.target._lngLat.lat];\n              } else {\n                coordinates = e.target._lngLat;\n              }\n              emit('update:coordinates', coordinates);\n            }\n            emit(event, e);\n          });\n        });\n        // Listen to Marker DOM events\n        markerDOMEvents.forEach((event: string) => {\n          marker.getElement().addEventListener(event, (e) => {\n            emit(event, e);\n          });\n        });\n      }\n\n      return {\n        isMarkerAvailable,\n        marker,\n        setSlotRef,\n      };\n    },\n  });\n</script>\n\n<template>\n  <section :id=\"`marker-${Date.now()}`\" class=\"absolute\">\n    <slot :set-ref=\"setSlotRef\" name=\"markers\" />\n    <template v-if=\"isMarkerAvailable\">\n      <v-popup\n        :marker=\"marker\"\n        :options=\"popupOptions\"\n        :coordinates=\"coordinates\"\n      >\n        <slot />\n      </v-popup>\n    </template>\n  </section>\n</template>\n\n<style>\n  .absolute {\n    position: absolute !important;\n  }\n</style>\n"],"names":["injectStrict","key","fallback","resolved","inject","MapKey","defaultOptions","props","__props","slots","useSlots","map","onMounted","addControl","options","control","AttributionControl","FullscreenControl","geolocateControlEvents","emit","__emit","GeolocateControl","events","event","NavigationControl","ScaleControl","_sfc_main$a","defineComponent","loaded","ref","layer","MapboxLayer","ArcLayer","styleTimeout","watch","value","addLayer","_sfc_main$9","GeoJsonLayer","_sfc_main$8","source","_sfc_render","_ctx","_cache","$props","$setup","$data","$options","_sfc_main$7","onBeforeUnmount","_sfc_main$6","_sfc_main$5","_sfc_main$4","_sfc_main$3","mapEvents","markerMapEvents","markerDOMEvents","popupEvents","shallowRef","Map","provide","listenMapEvents","e","evt","_sfc_main$1","popup","Popup","content","setPopupContent","setPopupCoordinates","addToMarker","listenPopupEvents","remove","removePopupEvents","_openBlock","_createElementBlock","_sfc_main","VPopup","marker","isMarkerAvailable","slotRef","setSlotRef","el","Marker","setMarkerCoordinates","addToMap","setCursorPointer","listenMarkerEvents","removeFromMap","coordinates","_resolveComponent","_createBlock","_component_v_popup","_renderSlot","_createCommentVNode"],"mappings":"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"}